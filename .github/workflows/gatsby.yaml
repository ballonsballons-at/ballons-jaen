# Workflow to build and deploy a Gatsby site to GitHub Pages and Cloudflare Pages.
# See: https://docs.github.com/en/actions/learn-github-actions/introduction-to-github-actions
name: Deploy Gatsby site to Pages

# Trigger on push to main, workflow calls, and manual dispatches.
# See: https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows
on:
  push: 
    branches: ["main"]
  workflow_call:
  workflow_dispatch:

# Set GITHUB_TOKEN permissions for deployment to GitHub Pages.
# See: https://docs.github.com/en/actions/reference/authentication-in-a-workflow
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one deployment at a time.
# See: https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#concurrency
concurrency:
  group: "pages"
  cancel-in-progress: true

# Default shell for all run steps.
# See: https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#defaults
defaults:
  run:
    shell: bash

# Job to build the Gatsby site and upload the build artifacts.
# See: https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#jobs
jobs:
  build:
    runs-on: macos-latest
    steps:
      # Checkout the repository
      # See: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Detect the package manager (npm or yarn) based on the lock file
      - name: Detect Package Manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "::set-output name=manager::yarn"
            echo "::set-output name=command::install"
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "::set-output name=manager::npm"
            echo "::set-output name=command::ci"
            exit 0
          else
            echo "Unable to determine packager manager"
            exit 1
          fi

      # Setup Node.js with the specified version and cache the dependencies
      # See: https://github.com/actions/setup-node
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      # Setup GitHub Pages for Gatsby
      # See: https://github.com/actions/configure-pages
      - name: Setup GitHub Pages for Gatsby
        id: pages
        uses: actions/configure-pages@v2
        with:
          static_site_generator: gatsby

      # Restore the cache from a previous build if available
      # See: https://github.com/actions/cache
      - name: Restore Cache from Previous Build
        uses: actions/cache@v3
        with:
          path: |
            public
            .cache
          key: ${{ runner.os }}-gatsby-build-${{ hashFiles('public') }}
          restore-keys: |
            ${{ runner.os }}-gatsby-build-

      # Install the dependencies
      - name: Install Dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      # Build the Gatsby site
      - name: Build Gatsby Site
        env:
          GATSBY_MYSHOPIFY_URL:  ${{ secrets.GATSBY_MYSHOPIFY_URL }}
          GATSBY_STOREFRONT_API_KEY:  ${{ secrets.GATSBY_STOREFRONT_API_KEY }}
          SHOPIFY_APP_PASSWORD:  ${{ secrets.SHOPIFY_APP_PASSWORD }}
          PREFIX_PATHS: 'true'
        run: ${{ steps.detect-package-manager.outputs.manager }} run build

      # Upload the build artifacts for the deployment job
      # See: https://github.com/actions/upload-artifact
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: github-pages
          path: ./public

  # Job to deploy the build artifacts to GitHub Pages and Cloudflare Pages.
  deploy-github-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: macos-latest
    needs: build
    steps:
      # Deploy the build artifacts to GitHub Pages
      # See: https://github.com/actions/deploy-pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  # Job to deploy the build artifacts to Cloudflare Pages.
  deploy-cloudflare:
    runs-on: macos-latest
    needs: build
    steps:
      # Download the build artifacts
      # See: https://github.com/actions/download-artifact
      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: github-pages
      # Deploy the build artifacts to Cloudflare Pages
      # See: https://github.com/cloudflare/pages-action
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: snek
          directory: ./public
          # Optional: Specify the Wrangler version
          wranglerVersion: '3'
